endpoints:
   api:
      enabled: true
logging:
   level:
      root: info
ontimize:
   corsfilter:
      enabled: true
   globalcors:
      corsConfigurations:
         '[/**]':
            allowedOrigins: "*"
            allowedHeaders: "*"
            exposedHeaders: ["X-Auth-Token","Content-disposition","X-Requested-With"]
            allowedMethods:
            - GET
            - POST
            - PUT
            - OPTIONS
            - DELETE
   jdbc:
      nameConvention: upper
      sqlhandler: hsqldb
      sqlConditionProcessor:
         uppperString: true
         upperLike: true
   security:
      mode: default
      ignorePaths: /app/**
      roleInformationService:
         roleRepository: UserRoleDao
         roleNameColumn: ROLENAME
         serverPermissionQueryId: serverPermissions
         serverPermissionNameColumn: PERMISSION_NAME
         clientPermissionQueryId: clientPermissions
         clientPermissionColumn: XMLCLIENTPERMISSION
      userInformationService:
         userRepository: UserDao
         userLoginColumn: USER_
         userPasswordColumn: PASSWORD
         queryId: login
         otherData:
            - NAME
            - SURNAME
            - EMAIL
            - NIF
            - USERBLOCKED
            - LASTPASSWORDUPDATE
            - FIRSTLOGIN
      userRoleInformationService:
         userRoleRepository: UserRoleDao
         queryId: userRole
         roleLoginColumn: USER_
         roleNameColumn: ROLENAME
server:
   port: 33333
   tomcat:
      uri-encoding: UTF-8
   compression:
      enabled: true
      mime-types: application/json, application/xml
spring:
  # Origen de los datos (Conexión con la DB)
   datasource:
      driver-class-name: org.postgresql.Driver #Driver del JDBC
      jdbcUrl: jdbc:postgresql://localhost:5432/postgres #URL de conexión
      username: postgres # Nombre de usuario de la BD
      password: 123456 # Contraseña del usuario de la BD
      initialSize: 10 # Tamaño inicial
      testOnBorrow: true # Validación
   main:
      banner-mode: 'off'
   session:
      store-type: none
   resources:
      static-locations: classpath:/ngx/dist/
   autoconfigure:
      exclude: |
         org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration, org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.FallbackWebSecurityAutoConfiguration
